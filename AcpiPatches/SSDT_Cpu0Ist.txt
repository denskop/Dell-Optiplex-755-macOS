# Fix definition block
Find: DefinitionBlock ("", "SSDT", 1, "DpgPmm", "Cpu0Ist", 0x00000011)
Replace: DefinitionBlock ("", "SSDT", 1, "APPLE", "Cpu0Ist", 0x00003000)

# Fix \_PR aliases
into_all all code_regex _PR_.CPU0 replace_matched begin \\_PR_.CPU0 end;
into scope label _PR.CPU0 set_label begin \_PR.CPU0 end;

# Change _PCT method logic (uni style)
into_all all code_regex If.*CFGD.*0x4000.*PDC0[\S\s]*?0x09[\S\s]*?Return\s\(Package replaceall_matched
begin
If ((CFGD & One) && (PDC0 & One))\n
{\n
    Return (Package
end;

# Set _PCT resources to zero
Find: 0x0000000000000199
Replace: 0x0000000000000000

Find: 0x0000000000000198
Replace: 0x0000000000000000

into_all all code_regex Register\s\(FFixedHW,((?:.)*)\n\s*((?:.)*), replaceall_matched
begin
Register (FFixedHW, 0x00,
end;

# Patch _PSS method to get correct power states
into_all all code_regex If.*CFGD.*0x4000.*PDC0.*0x09[\S\s]*NPSS[\S\s]*\} replaceall_matched
begin
External (\\OSDW, MethodObj)\n
If ((PDC0 & 0x01) || \\OSDW())\n
{\n
    Return (NPSS)\n
}\n
end;

# Insert _PSD method
into scope label \_PR.CPU0 insert
begin
Method (_PSD, 0, NotSerialized)\n
{\n
    If (CFGD & 0x01000000)\n
    {\n
        If (PDC0 & 0x0800)\n
        {\n
            Return (Package (0x01)\n
            {\n
                Package (0x05)\n
                {\n
                    0x05,\n
                    0x00,\n
                    0x00,\n
                    0xFE,\n
                    0x02\n
                }\n
            })\n
        }\n
        
        Return (Package (0x01)\n
        {\n
            Package (0x05)\n
            {\n
                0x05,\n
                0x00,\n
                0x00,\n
                0xFC,\n
                0x02\n
            }\n
        })\n
    }\n
    
    Return (Package (0x01)\n
    {\n
        Package (0x05)\n
        {\n
            0x05,\n
            0x00,\n
            0x00,\n
            0xFC,\n
            0x01\n
        }\n
    })\n
}
end;
